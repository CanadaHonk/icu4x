// @generated
# [doc = " Implement `DataProvider<ExemplarCharactersIndexV1Marker>` on the given struct using the data"] # [doc = r" hardcoded in this file. This allows the struct to be used with"] # [doc = r" `icu`'s `_unstable` constructors."] # [doc (hidden)] # [macro_export] macro_rules ! __impl_props_exemplarchars_index_v1 { ($ provider : ty) => { # [clippy :: msrv = "1.66"] const _ : () = < $ provider > :: MUST_USE_MAKE_PROVIDER_MACRO ; # [clippy :: msrv = "1.66"] impl icu_provider :: DataProvider < icu_properties :: provider :: ExemplarCharactersIndexV1Marker > for $ provider { fn load (& self , req : icu_provider :: DataRequest ,) -> Result < icu_provider :: DataResponse < icu_properties :: provider :: ExemplarCharactersIndexV1Marker > , icu_provider :: DataError > { static AR : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"'\x06\0\0)\x06\0\0*\x06\0\0;\x06\0\0A\x06\0\0I\x06\0\0J\x06\0\0K\x06\0\0") } , 28u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static EN : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"A\0\0\0[\0\0\0") } , 26u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static SR_LATN : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"A\0\0\0[\0\0\0\x06\x01\0\0\x07\x01\0\0\x0C\x01\0\0\r\x01\0\0`\x01\0\0a\x01\0\0}\x01\0\0~\x01\0\0") } , 30u32) } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x03\0\0\0\0\0\x03\0\x05\0D\xC5\xBDLJNJ") }) ,) ; static TR : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"A\0\0\0[\0\0\0\xC7\0\0\0\xC8\0\0\0\xD6\0\0\0\xD7\0\0\0\xDC\0\0\0\xDD\0\0\x000\x01\0\x001\x01\0\0^\x01\0\0_\x01\0\0") } , 31u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static FIL : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"A\0\0\0[\0\0\0\xD1\0\0\0\xD2\0\0\0") } , 27u32) } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0Ng") }) ,) ; static ES : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"A\0\0\0[\0\0\0\xD1\0\0\0\xD2\0\0\0") } , 27u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static JA : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"B0\0\0C0\0\0K0\0\0L0\0\0U0\0\0V0\0\0_0\0\0`0\0\0j0\0\0k0\0\0o0\0\0p0\0\0~0\0\0\x7F0\0\0\x840\0\0\x850\0\0\x890\0\0\x8A0\0\0\x8F0\0\0\x900\0\0") } , 10u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static RU : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x01\x04\0\0\x02\x04\0\0\x10\x04\0\0*\x04\0\0+\x04\0\0,\x04\0\0-\x04\0\x000\x04\0\0") } , 31u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static TH : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x01\x0E\0\0/\x0E\0\0") } , 46u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static SR : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x02\x04\0\0\x03\x04\0\0\x08\x04\0\0\x0C\x04\0\0\x0F\x04\0\0\x19\x04\0\0\x1A\x04\0\0)\x04\0\0") } , 30u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static CCP : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x03\x11\x01\0'\x11\x01\0") } , 36u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static BN : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x85\t\0\0\x8C\t\0\0\x8F\t\0\0\x91\t\0\0\x93\t\0\0\xA9\t\0\0\xAA\t\0\0\xB1\t\0\0\xB2\t\0\0\xB3\t\0\0\xB6\t\0\0\xBA\t\0\0") } , 43u32) } , unsafe { zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0\xE0\xA6\x95\xE0\xA7\x8D\xE0\xA6\xB7") }) ,) ; static UND : < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable = icu_properties :: provider :: PropertyUnicodeSetV1 :: CPInversionListStrList (icu_collections :: codepointinvliststringlist :: CodePointInversionListAndStringList :: from_parts_unchecked (unsafe { # [allow (unused_unsafe)] icu_collections :: codepointinvlist :: CodePointInversionList :: from_parts_unchecked (zerovec :: ZeroVec :: new () , 0u32) } , zerovec :: VarZeroVec :: new ()) ,) ; static VALUES : [& < icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: DataMarker > :: Yokeable ; 232usizestatic KEYS : [& str ; 232usize] = ["ar" , "ar-AE" , "ar-BH" , "ar-DJ" , "ar-DZ" , "ar-EG" , "ar-EH" , "ar-ER" , "ar-IL" , "ar-IQ" , "ar-JO" , "ar-KM" , "ar-KW" , "ar-LB" , "ar-LY" , "ar-MA" , "ar-MR" , "ar-OM" , "ar-PS" , "ar-QA" , "ar-SA" , "ar-SD" , "ar-SO" , "ar-SS" , "ar-SY" , "ar-TD" , "ar-TN" , "ar-YE" , "bn" , "bn-IN" , "ccp" , "ccp-IN" , "en" , "en-001" , "en-150" , "en-AE" , "en-AG" , "en-AI" , "en-AS" , "en-AT" , "en-AU" , "en-BB" , "en-BE" , "en-BI" , "en-BM" , "en-BS" , "en-BW" , "en-BZ" , "en-CA" , "en-CC" , "en-CH" , "en-CK" , "en-CM" , "en-CX" , "en-CY" , "en-DE" , "en-DG" , "en-DK" , "en-DM" , "en-ER" , "en-FI" , "en-FJ" , "en-FK" , "en-FM" , "en-GB" , "en-GD" , "en-GG" , "en-GH" , "en-GI" , "en-GM" , "en-GU" , "en-GY" , "en-HK" , "en-IE" , "en-IL" , "en-IM" , "en-IN" , "en-IO" , "en-JE" , "en-JM" , "en-KE" , "en-KI" , "en-KN" , "en-KY" , "en-LC" , "en-LR" , "en-LS" , "en-MG" , "en-MH" , "en-MO" , "en-MP" , "en-MS" , "en-MT" , "en-MU" , "en-MV" , "en-MW" , "en-MY" , "en-NA" , "en-NF" , "en-NG" , "en-NL" , "en-NR" , "en-NU" , "en-NZ" , "en-PG" , "en-PH" , "en-PK" , "en-PN" , "en-PR" , "en-PW" , "en-RW" , "en-SB" , "en-SC" , "en-SD" , "en-SE" , "en-SG" , "en-SH" , "en-SI" , "en-SL" , "en-SS" , "en-SX" , "en-SZ" , "en-TC" , "en-TK" , "en-TO" , "en-TT" , "en-TV" , "en-TZ" , "en-UG" , "en-UM" , "en-VC" , "en-VG" , "en-VI" , "en-VU" , "en-WS" , "en-ZA" , "en-ZM" , "en-ZW" , "es" , "es-419" , "es-AR" , "es-BO" , "es-BR" , "es-BZ" , "es-CL" , "es-CO" , "es-CR" , "es-CU" , "es-DO" , "es-EA" , "es-EC" , "es-GQ" , "es-GT" , "es-HN" , "es-IC" , "es-MX" , "es-NI" , "es-PA" , "es-PE" , "es-PH" , "es-PR" , "es-PY" , "es-SV" , "es-US" , "es-UY" , "es-VE" , "fil" , "fr" , "fr-BE" , "fr-BF" , "fr-BI" , "fr-BJ" , "fr-BL" , "fr-CA" , "fr-CD" , "fr-CF" , "fr-CG" , "fr-CH" , "fr-CI" , "fr-CM" , "fr-DJ" , "fr-DZ" , "fr-GA" , "fr-GF" , "fr-GN" , "fr-GP" , "fr-GQ" , "fr-HT" , "fr-KM" , "fr-LU" , "fr-MA" , "fr-MC" , "fr-MF" , "fr-MG" , "fr-ML" , "fr-MQ" , "fr-MR" , "fr-MU" , "fr-NC" , "fr-NE" , "fr-PF" , "fr-PM" , "fr-RE" , "fr-RW" , "fr-SC" , "fr-SN" , "fr-SY" , "fr-TD" , "fr-TG" , "fr-TN" , "fr-VU" , "fr-WF" , "fr-YT" , "hi-Latn" , "ja" , "ru" , "ru-BY" , "ru-KG" , "ru-KZ" , "ru-MD" , "ru-UA" , "sr" , "sr-BA" , "sr-Latn" , "sr-Latn-BA" , "sr-Latn-XK" , "sr-ME" , "sr-XK" , "th" , "tr" , "tr-CY" , "und"] ; if let Ok (payload) = KEYS . binary_search_by (| k | req . locale . strict_cmp (k . as_bytes ()) . reverse ()) . map (| i | * unsafe { VALUES . get_unchecked (i) }) { Ok (icu_provider :: DataResponse { payload : Some (icu_provider :: DataPayload :: from_static_ref (payload)) , metadata : Default :: default () , }) } else { Err (icu_provider :: DataErrorKind :: MissingLocale . with_req (< icu_properties :: provider :: ExemplarCharactersIndexV1Marker as icu_provider :: KeyedDataMarker > :: KEY , req)) } } } } }